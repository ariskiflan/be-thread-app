"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const followController_1 = require("../controller/followController");
const userController_1 = require("../controller/userController");
const auth_1 = __importDefault(require("../midlleware/auth"));
const upload_1 = __importDefault(require("../midlleware/upload"));
const profileController_1 = require("../controller/profileController");
const threadController_1 = require("../controller/threadController");
const likesController_1 = require("../controller/likesController");
const cloudinary_1 = __importDefault(require("../lib/cloudinary"));
const uploads_1 = __importDefault(require("../midlleware/uploads"));
cloudinary_1.default.config();
const Route = express_1.default.Router();
Route.post("/register", userController_1.register);
Route.post("/login", userController_1.login);
Route.get("/users", auth_1.default, userController_1.getUsers);
Route.get("/user", auth_1.default, userController_1.getUsersSearch);
Route.get("/user/:id", auth_1.default, userController_1.getUser);
Route.patch("/profile", auth_1.default, (0, upload_1.default)(), profileController_1.updateProfile);
Route.get("/profile", auth_1.default, profileController_1.getProfile);
Route.get("/profile/:id", auth_1.default, profileController_1.getProfile);
Route.post("/thread", auth_1.default, (0, uploads_1.default)(), threadController_1.createThread);
Route.get("/threads", threadController_1.getThreads);
Route.get("/thread/:id", auth_1.default, threadController_1.getThread);
Route.get("/threadByToken", auth_1.default, threadController_1.getThreadByToken);
Route.delete("/deleteThread/:id", auth_1.default, threadController_1.deleteThread);
Route.get("/replies/:id", auth_1.default, threadController_1.getReplies);
Route.get("/threadByUserId/:id", auth_1.default, threadController_1.getThreadByUserId);
Route.post("/like", auth_1.default, likesController_1.createLike);
Route.get("/likes/:threadId", auth_1.default, likesController_1.getLikes);
Route.get("/like/:threadId", auth_1.default, likesController_1.getCurrentLike);
Route.post("/follow", auth_1.default, followController_1.follow);
Route.get("/follower/:followingId", auth_1.default, followController_1.getFollower);
Route.get("/following/:followerId", auth_1.default, followController_1.getFollowings);
Route.get("/follower", auth_1.default, followController_1.getFollowersUsers);
Route.get("/following", auth_1.default, followController_1.getFollowingsUsers);
// Route.get("/suggestions", auth, getOtherUsers);
Route.get("/suggested", auth_1.default, userController_1.getUserNotId);
exports.default = Route;
